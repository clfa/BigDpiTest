<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2010 (http://www.altova.com) by Chen Jiangyong (DataNew) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dn="http://www.datanew.com" targetNamespace="http://www.datanew.com" elementFormDefault="qualified">
  <xs:include schemaLocation="../../bin/CommonType.xsd"/>
  <xs:include schemaLocation="../../bin/CommonElement.xsd"/>
  <xs:include schemaLocation="Operators.xsd"/>
  <xs:include schemaLocation="DataNewOperateRight.xsd"/>
  <xs:complexType name="OperateRightType">
    <xs:choice>
      <xs:element ref="dn:SimpleListOperateRight"/>
      <xs:element name="EmptyOperateRight" type="dn:EmptyType">
        <xs:annotation>
          <xs:documentation>不产生操作权限，配置的操作符将全部起效</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="dn:FieldOperateRight"/>
      <xs:element name="RegOperateRight" type="xs:Name">
        <xs:annotation>
          <xs:documentation>根据配置的注册名实例化操作权限</xs:documentation>
        </xs:annotation>
      </xs:element>
      <!--<xs:element ref="dn:SubFuncFieldOperateRight">
        <xs:annotation>
          <xs:documentation>根据Field的值以及功能权限中的子功能操作获得其交集的操作权限</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="dn:SubFuncOperateRight">
        <xs:annotation>
          <xs:documentation>功能权限中的子功能操作配置的操作权限（依靠功能权限的实现）</xs:documentation>
        </xs:annotation>
      </xs:element>-->
      <xs:element ref="dn:CreateWorkflowOperateRight"/>
      <xs:any namespace="##local" processContents="lax"/>
      <xs:element name="JuelOperateRight">
        <xs:annotation>
          <xs:documentation>根据Juel表达式配置的操作权限</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Empty" type="xs:string" minOccurs="0">
              <xs:annotation>
                <xs:documentation>配置列表全局的OperatorId，多个Operator时，Id中间用","隔开</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Item" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation>配置各种条件下的对应的Operators</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Condition" type="dn:JuelConfigItem">
                    <xs:annotation>
                      <xs:documentation>Juel表达式，当返回值为true时，条件满足，返回配置的Operators</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="Operators" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>配置内容为Operator的Id，多个Operator时，Id中间用","隔开</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="OperateRightConfig">
    <xs:choice>
      <xs:element ref="dn:StandardOperators"/>
      <xs:element ref="dn:SimpleListOperators"/>
      <xs:element ref="dn:SimpleDetailOperators"/>
      <xs:element name="EmptyOperators" type="dn:EmptyType">
        <xs:annotation>
          <xs:documentation>空操作符配置</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="dn:SimpleTreeDetailOperators"/>
      <!--
      <xs:element ref="dn:SubFuncOperators"/>
      <xs:element ref="dn:SubFuncFieldOperators"/>
      <xs:element ref="dn:SubFuncTreeOperators"/>-->
      <xs:element ref="dn:SimpleDetailListOperators"/>
      <xs:element ref="dn:SimpleWorkflowListOperators"/>
      <xs:element ref="dn:SimpleWorkflowDetailOperators"/>
      <xs:any namespace="##local" processContents="lax"/>
      <xs:element ref="dn:KnSimpleDetailListOperators"/>
      <xs:element ref="dn:KnVolumeSimpleDetailListOperators"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="ObjectOperateRightType">
    <xs:choice>
      <xs:element ref="dn:SimpleListObjectOperateRight">
        <xs:annotation>
          <xs:documentation>默认列表对象操作符的操作权限</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="EmptyObjectOperateRight" type="dn:EmptyType">
        <xs:annotation>
          <xs:documentation>不产生对象操作权限，配置的操作符将全部起效</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##local" processContents="lax"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="ObjectOperateRightConfig">
    <xs:choice>
      <xs:element ref="dn:StandardObjectOperators">
        <xs:annotation>
          <xs:documentation>标准对象操作符配置</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="dn:SimpleListObjectOperators">
        <xs:annotation>
          <xs:documentation>默认列表对象操作符配置</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="dn:SimpleDetailObjectOperators">
        <xs:annotation>
          <xs:documentation>默认查看页面的对象操作符配置</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="dn:SimpleTreeDetailObjectOperators"/>
      <xs:element name="EmptyObjectOperators" type="dn:EmptyType">
        <xs:annotation>
          <xs:documentation>空对象操作符配置</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:any namespace="##local" processContents="lax"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="SimpleListOperators" type="dn:dn_dn_SimpleListOperatorsType">
    <xs:annotation>
      <xs:documentation>默认列表操作符配置</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="StandardOperators">
    <xs:annotation>
      <xs:documentation>标准操作符配置</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Right" type="dn:OperateRightType">
          <xs:annotation>
            <xs:documentation>操作权限配置</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:group ref="dn:dn_dn_OperatorGroup" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SimpleDetailOperators">
    <xs:annotation>
      <xs:documentation>默认查看页面的操作符配置</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="IsDialog" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>是否使用Dialog的方式显示</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="SimpleListObjectOperators" type="dn:dn_dn_SimpleListOperatorsType">
    <xs:annotation>
      <xs:documentation>默认列表操作符配置</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="StandardObjectOperators">
    <xs:annotation>
      <xs:documentation>标准操作符配置</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Right" type="dn:ObjectOperateRightType">
          <xs:annotation>
            <xs:documentation>对象操作权限配置</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:group ref="dn:dn_dn_OperatorGroup" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SimpleDetailObjectOperators">
    <xs:annotation>
      <xs:documentation>默认查看页面的操作符配置</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="IsDialog" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>是否使用Dialog的方式显示</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="SimpleTreeDetailOperators">
    <xs:annotation>
      <xs:documentation>默认树详细页面操作符配置</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dn:dn__dn_TreeDetailOperatorsType">
          <xs:attribute name="LayerFieldName" type="xs:Name">
            <xs:annotation>
              <xs:documentation>Layer字段的昵称，如果不配置，将设置为Layer</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SimpleListOperateRight" type="dn:SimpleListOperateRightType">
    <xs:annotation>
      <xs:documentation>默认列表操作符的操作权限</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="SimpleListObjectOperateRight" type="dn:SimpleListOperateRightType">
    <xs:annotation>
      <xs:documentation>默认基于对象的列表操作符的操作权限</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="FieldOperateRight" type="dn:FieldOperateRightType">
    <xs:annotation>
      <xs:documentation>根据Field的值配置的操作权限</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="SimpleTreeDetailObjectOperators" type="dn:dn__dn_TreeDetailOperatorsType">
    <xs:annotation>
      <xs:documentation>默认树详细页面的对象操作符配置</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="dn__dn_TreeDetailOperatorsType">
    <xs:sequence>
      <xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>除了新建，修改和删除外，还可以添加额外的操作</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="dn:dn_dn_OperatorGroup"/>
          <xs:attribute name="Position">
            <xs:annotation>
              <xs:documentation>定义在相对按钮之前，还是之后，默认为Before</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:NMTOKEN">
                <xs:enumeration value="Before"/>
                <xs:enumeration value="After"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="Button">
            <xs:annotation>
              <xs:documentation>定义以哪个按钮为相对按钮，最前的是Update，最后的是Insert。默认为Update</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:NMTOKEN">
                <xs:enumeration value="Update"/>
                <xs:enumeration value="Delete"/>
                <xs:enumeration value="Insert"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="DisableRootDelete" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>是否禁止删除根节点，默认为true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IsDialog" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>是否使用Dialog的方式显示，默认为true</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="FieldOperateRightType">
    <xs:sequence>
      <xs:element name="Empty" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>配置列表全局的OperatorId，多个Operator时，Id中间用","隔开</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Item" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>配置内容为Operator的Id，多个Operator时，Id中间用","隔开</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="Value" type="xs:string" use="required">
                <xs:annotation>
                  <xs:documentation>字段匹配的值</xs:documentation>
                </xs:annotation>
              </xs:attribute>
              <xs:attribute name="ContainsNull" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>是否匹配DbNull，默认为false</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="FieldName" type="xs:Name" use="required">
      <xs:annotation>
        <xs:documentation>字段的昵称</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:element name="SubFuncFieldOperateRight" type="dn:dn__dn_SubFuncFieldOperateRightType">
    <xs:annotation>
      <xs:documentation>根据Field的值以及功能权限中的子功能操作获得其交集的操作符的操作权限</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="SubFuncOperateRight" type="dn:dn__dn_SubFuncOperateRightType">
    <xs:annotation>
      <xs:documentation>功能权限中的子功能操作配置权限（依靠功能权限的实现）</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="dn__dn_SubFuncOperateRightType">
    <xs:attribute name="FunctionKey" type="xs:Name" use="required"/>
  </xs:complexType>
  <xs:complexType name="dn__dn_SubFuncFieldOperateRightType">
    <xs:complexContent>
      <xs:extension base="dn:FieldOperateRightType">
        <xs:attribute name="FunctionKey" type="xs:Name" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="OperatorPageType">
    <xs:restriction base="xs:NMTOKEN">
      <xs:enumeration value="List"/>
      <xs:enumeration value="Detail"/>
      <xs:enumeration value="All"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="SubFuncOperators">
    <xs:annotation>
      <xs:documentation>根据表SYS_SUB_FUNC的数据并参考角色权限的操作符配置(包含在YJC.Toolkit.SimpleRight.dll中)</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dn:dn__dn_SubFuncOperateRightType">
          <xs:attribute name="Page" type="dn:OperatorPageType" use="required">
            <xs:annotation>
              <xs:documentation>当前Operators所在的Page</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SubFuncFieldOperators">
    <xs:annotation>
      <xs:documentation>根据表SYS_SUB_FUNC的数据并参考角色权限，再根据Field的值交叉获得的操作符配置(包含在YJC.Toolkit.SimpleRight.dll中)</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dn:dn__dn_SubFuncFieldOperateRightType">
          <xs:attribute name="Page" type="dn:OperatorPageType" use="required"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SubFuncTreeOperators">
    <xs:annotation>
      <xs:documentation>根据表SYS_SUB_FUNC的数据并参考角色权限，再根据树的权限要求交叉获得的操作符配置(包含在YJC.Toolkit.SimpleRight.dll中)</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dn:dn__dn_SubFuncOperateRightType">
          <xs:attribute name="LayerFieldName" type="xs:Name">
            <xs:annotation>
              <xs:documentation>Layer字段的昵称，如果不配置，将设置为Layer</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="DisableRootDelete" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>是否禁止删除根节点，默认为true</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SimpleDetailListOperators">
    <xs:annotation>
      <xs:documentation>默认详情中子列表的操作符配置，注意，这里强制所有的Operator都采用Dialog模式</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dn:SimpleListOperateRightType">
          <xs:attribute name="Source" type="xs:string" use="required">
            <xs:annotation>
              <xs:documentation>调用子列表的Source</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attributeGroup ref="dn:dn_dn_DialogSize"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
</xs:schema>
